// Code generated by MockGen. DO NOT EDIT.
// Source: linter.go

// Package lintermock is a generated GoMock package.
package lintermock

import (
	x509 "crypto/x509"
	gomock "github.com/golang/mock/gomock"
	linter "github.com/googleinterns/ocsp-response-linter/linter"
	ocsp "golang.org/x/crypto/ocsp"
	reflect "reflect"
)

// MockLinterInterface is a mock of LinterInterface interface
type MockLinterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLinterInterfaceMockRecorder
}

// MockLinterInterfaceMockRecorder is the mock recorder for MockLinterInterface
type MockLinterInterfaceMockRecorder struct {
	mock *MockLinterInterface
}

// NewMockLinterInterface creates a new mock instance
func NewMockLinterInterface(ctrl *gomock.Controller) *MockLinterInterface {
	mock := &MockLinterInterface{ctrl: ctrl}
	mock.recorder = &MockLinterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLinterInterface) EXPECT() *MockLinterInterfaceMockRecorder {
	return m.recorder
}

// LintOCSPResp mocks base method
func (m *MockLinterInterface) LintOCSPResp(arg0 *ocsp.Response, arg1 *x509.Certificate, arg2 *linter.LintOpts, arg3 bool) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "LintOCSPResp", arg0, arg1, arg2, arg3)
}

// LintOCSPResp indicates an expected call of LintOCSPResp
func (mr *MockLinterInterfaceMockRecorder) LintOCSPResp(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LintOCSPResp", reflect.TypeOf((*MockLinterInterface)(nil).LintOCSPResp), arg0, arg1, arg2, arg3)
}
